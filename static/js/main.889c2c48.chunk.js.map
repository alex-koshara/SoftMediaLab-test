{"version":3,"sources":["store.ts","components/Checkbox/Checkbox.tsx","components/InformerNdfl/InformerNdfl.tsx","data.ts","components/Input/Input.tsx","components/Infobox/Infobox.tsx","components/Radio/Radio.tsx","components/RadioGroup/RadioGroup.tsx","components/FormNdfl/FormNdfl.tsx","index.tsx"],"names":["reducer","combineReducers","form","reduxFormReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Connected","connect","state","checked","simple","values","ndfl","className","Field","name","id","component","type","RadioValues","RadioLabels","salary","period","Number","persentSalary","salaryOnHands","ndflSumValue","totalSum","RADIO_LIST","value","mounth","label","month","mrot","description","day","hour","placeholder","inputLabel","text","getInputLabel","Infobox","useState","clicked","setClicked","infoboxClass","divClass","iconClass","onClick","Radio","data","checkedValue","radioData","map","radio","reduxForm","props","handleSubmit","onSubmit","rootEl","document","getElementById","ReactDOM","render","style","padding","initialValues"],"mappings":"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","file":"static/js/main.889c2c48.chunk.js","sourcesContent":["import { createStore, combineReducers } from 'redux';\nimport { reducer as reduxFormReducer } from 'redux-form';\n\nconst reducer = combineReducers({\n  form: reduxFormReducer, // mounted under \"form\"\n});\nconst store = createStore(\n  reducer, /* preloadedState, */\n  (window as any).window.__REDUX_DEVTOOLS_EXTENSION__ && (window as any).window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport './Checkbox.scss';\nimport {connect} from \"react-redux\";\nimport { IFormStates } from '../../interface';\n\ntype CheckboxProps = {\n  checked: boolean;\n}\n\nconst Checkbox: React.FC<CheckboxProps> = ({checked = false}) => {\n  return (\n    <div className=\"checkbox\">\n      <span className=\"chekcbox__left-label chekcbox__label\">Указать с НДФЛ</span>\n      <div className=\"form-check form-switch\">\n        <Field\n          name=\"ndfl\"\n          id=\"ndfl\"\n          component=\"input\"\n          type=\"checkbox\"\n          checked={checked}\n          className=\"form-check-input checkbox__control\"\n        />\n      </div>\n      <span className=\"chekcbox__right-label chekcbox__label\">Без НДФЛ</span>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: IFormStates) => ({\n  checked: state.form.simple.values.ndfl\n})\n\nconst Connected = connect(mapStateToProps)(Checkbox)\nexport { Connected as Checkbox}","import React from 'react';\nimport './InformerNdfl.scss';\nimport { connect } from 'react-redux';\nimport { IFormStates } from '../../interface';\n\nconst NDFL_PERCENT = 13;\nconst showPeriod = 'mounth';\n\ntype InformerNdflProps = {\n  salary: number;\n  ndfl: boolean;\n  period: string;\n}\n\nconst InformerNdfl: React.FC<InformerNdflProps> = ({salary, ndfl, period}) => {\n  const persentSalary: number = salary / 100 * NDFL_PERCENT;\n  const salaryOnHands = ndfl ? salary : salary - persentSalary\n  const ndflSumValue = salary > 0 ? persentSalary : 0;\n  const totalSum: number = ndfl ? salary + ndflSumValue : salary;\n\n  return (\n    period === showPeriod\n      ? <div className=\"informer-ndfl\">\n          <p className=\"informer-ndfl__text\"><b>{salaryOnHands} &#8381;</b> сотрудник будет получать на руки</p>\n          <p className=\"informer-ndfl__text\"><b>{ndflSumValue} &#8381;</b> НДФЛ, {NDFL_PERCENT}% от оклада</p>\n          <p className=\"informer-ndfl__text\"><b>{totalSum} &#8381;</b> за сотрудника в месяц</p>\n        </div>\n      : null\n  )\n}\n\nfunction mapStateToProps(state: IFormStates) {\n  let {salary, ndfl, period} = state.form.simple.values;\n  salary = Number(salary)\n\n  return {\n    salary,\n    ndfl,\n    period\n  }\n}\n\nexport default connect(mapStateToProps)(InformerNdfl)\n","export enum RadioValues {\n  mounth = 'mounth',\n  mrot = 'mrot',\n  day = 'day',\n  hour = 'hour'\n}\n\nenum RadioLabels {\n  month = 'Оклад за месяц',\n  mrot = 'MROT',\n  day = 'Оплата за день',\n  hour = 'Оплата за час',\n}\n\nexport const RADIO_LIST = [\n  {\n    id: 0,\n    value: RadioValues.mounth,\n    label: RadioLabels.month,\n  },\n  {\n    id: 1,\n    value: RadioValues.mrot,\n    label: RadioLabels.mrot,\n    description: 'МРОТ - минимальный размер оплаты труда. Разный для разных регионов.'\n  },\n  {\n    id: 2,\n    value: RadioValues.day,\n    label: RadioLabels.day,\n  },\n  {\n    id: 3,\n    value: RadioValues.hour,\n    label: RadioLabels.hour,\n  }\n]","import React from 'react';\nimport { Field } from 'redux-form';\nimport './Input.scss';\nimport {connect} from \"react-redux\";\nimport { IFormStates } from '../../interface';\nimport { RadioValues } from '../../data';\n\ntype InputProps = {\n  placeholder?: string;\n  period: string;\n}\n\nconst Input: React.FC<InputProps> = ({ placeholder = '', period}) => {\n  const getInputLabel = (): string => {\n    let text = '';\n    switch (period) {\n      case RadioValues.mounth:\n        text = '';\n        return text;\n      case RadioValues.day:\n        text = 'в день';\n        return text;\n      case RadioValues.hour:\n        text = 'в час';\n        return text;\n    }\n\n    return text;\n  }\n  const inputLabel = getInputLabel();\n\n  return (\n    period !== RadioValues.mrot\n      ? <div className=\"input\">\n        <Field\n          name=\"salary\"\n          component=\"input\"\n          type=\"number\"\n          placeholder={placeholder}\n          className=\"input__control\"\n        /> <b>&#8381;</b> {inputLabel}\n      </div>\n    : null\n  )\n}\n\nconst mapStateToProps = (state: IFormStates) => {\n  return ({\n  period: state.form.simple.values.period,\n})}\n\nconst Connected = connect(mapStateToProps)(Input)\nexport { Connected as Input}","import React, {useState} from 'react';\nimport './Infobox.scss';\n\ntype InfoboxProps = {\n  description: string | undefined;\n  className: string;\n}\n\nexport const Infobox: React.FC<InfoboxProps> = ({ description, className }) => {\n  const [clicked, setClicked] = useState(false);\n  const infoboxClass = className ? `${className} infobox` : 'infobox';\n  const divClass = clicked ? 'infobox__content infobox__content--active' : 'infobox__content';\n  const iconClass = clicked ? 'infobox__icon infobox__icon--active' : 'infobox__icon';\n\n  return description\n    ? (\n        <section className={infoboxClass}>\n          <i\n            className={iconClass}\n            onClick={() => setClicked(!clicked)}>\n          </i>\n          <div className={divClass}>\n            {description}\n          </div>\n        </section>\n      )\n  : null\n}\n","import React from 'react';\nimport './Radio.scss';\nimport { Field } from 'redux-form';\nimport { IRadio } from '../../interface';\nimport { Infobox } from '../Infobox/Infobox';\n\ntype RadioProps = {\n  data: IRadio;\n  key: number;\n  checkedValue: string;\n}\n\nexport const Radio: React.FC<RadioProps> = ({data, checkedValue}) => {\n  return (\n    <div className=\"radio-group__item radio\">\n      <label className=\"radio__wrap\">\n        <Field\n          name=\"period\"\n          component=\"input\"\n          checked={data.value === checkedValue}\n          type=\"radio\"\n          value={data.value}\n          className=\"radio__control\"\n        />\n        <span className=\"radio__label\">{data.label}</span>\n      </label>\n      <Infobox description={data.description} className=\"radio__infobox\" />\n    </div>\n  )\n}\n","import React from 'react';\nimport { IRadio, IFormStates } from '../../interface';\nimport './RadioGroup.scss';\nimport { Radio } from '../Radio/Radio';\nimport {connect} from \"react-redux\";\n\ntype RadioGroupProps = {\n  radioData: IRadio[];\n  value: string;\n}\n\nconst RadioGroup: React.FC<RadioGroupProps> = ({radioData, value}) => {\n  return (\n    <div className=\"radio-group\">\n      <span className=\"radio-group__title\">Сумма</span>\n      <div className=\"radio-group__wrap\">\n        {radioData.map(radio => {\n          return (\n            <Radio\n              data={radio}\n              key={radio.id}\n              checkedValue={value}\n            />\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: IFormStates) => ({\n  value: state.form.simple.values.period\n})\n\nconst Connected = connect(mapStateToProps)(RadioGroup)\nexport  { Connected as RadioGroup}","import { reduxForm, InjectedFormProps } from 'redux-form';\nimport { Checkbox } from './../Checkbox/Checkbox';\nimport InformerNdfl from './../InformerNdfl/InformerNdfl';\nimport { Input } from './../Input/Input';\nimport { RadioGroup } from './../RadioGroup/RadioGroup';\nimport {RADIO_LIST} from \"../../data\";\nimport './FormNdfl.scss';\n\nconst FormNdfl = (props: InjectedFormProps) => {\n  const {handleSubmit} = props;\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form-ndfl\">\n      <div className=\"form-ndfl__group\">\n        <RadioGroup radioData={RADIO_LIST} />\n      </div>\n      <div className=\"form-ndfl__group\">\n        <Checkbox />\n      </div>\n      <div className=\"form-ndfl__group\">\n        <Input placeholder=\"Введите сумму\" />\n      </div>\n      <InformerNdfl />\n    </form>\n  );\n};\n\n\nexport default reduxForm({\n  form: 'simple',\n})(FormNdfl);\n\n\n","\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport './style.scss'\nimport FormNdfl from \"./components/FormNdfl/FormNdfl\";\nimport {RadioValues} from \"./data\";\n\nconst rootEl = document.getElementById(\"root\");\nconst DEFAULT_SALARY = 0;\n\nReactDOM.render(\n  <Provider store={store}>\n    <div style={{ padding: 15 }}>\n      <FormNdfl initialValues={\n        {\n          ndfl: true,\n          period: RadioValues.mounth,\n          salary: DEFAULT_SALARY\n        }\n      } />\n    </div>\n  </Provider>,\n  rootEl\n);\n\n"],"sourceRoot":""}